<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.ninng.qs.user.mapper.AuthorizationMapper">

    <resultMap id="BaseResultMap" type="top.ninng.qs.user.entity.Authorization">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="code" column="code" jdbcType="VARCHAR"/>
        <result property="info" column="info" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,code,info,
        user_id
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from authorizsation
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByUserId" resultType="top.ninng.qs.user.entity.Authorization" resultMap="BaseResultMap">
        select *
        from authorizsation
        where user_id = #{userId,jdbcType=INTEGER}
    </select>

    <select id="selectByUserIdAndCode" resultType="top.ninng.qs.user.entity.Authorization" resultMap="BaseResultMap">
        select *
        from authorizsation
        where user_id = #{userId,jdbcType=INTEGER}
          and code = #{code,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from authorizsation
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="top.ninng.qs.user.entity.Authorization"
            useGeneratedKeys="true">
        insert into authorizsation
        ( id, code, info
        , user_id)
        values ( #{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{info,jdbcType=VARCHAR}
               , #{userId,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="top.ninng.qs.user.entity.Authorization"
            useGeneratedKeys="true">
        insert into authorizsation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="code != null">code,</if>
            <if test="info != null">info,</if>
            <if test="userId != null">user_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=INTEGER},</if>
            <if test="code != null">#{code,jdbcType=VARCHAR},</if>
            <if test="info != null">#{info,jdbcType=VARCHAR},</if>
            <if test="userId != null">#{userId,jdbcType=INTEGER},</if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="top.ninng.qs.user.entity.Authorization">
        update authorizsation
        <set>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="info != null">
                info = #{info,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="top.ninng.qs.user.entity.Authorization">
        update authorizsation
        set code    = #{code,jdbcType=VARCHAR},
            info    = #{info,jdbcType=VARCHAR},
            user_id = #{userId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>
