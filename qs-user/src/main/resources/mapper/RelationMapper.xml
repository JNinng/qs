<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.ninng.qs.user.mapper.RelationMapper">

    <resultMap id="BaseResultMap" type="top.ninng.qs.user.entity.Relation">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="aUserId" column="a_user_id" jdbcType="INTEGER"/>
        <result property="bUserId" column="b_user_id" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,a_user_id,b_user_id
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from relation
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectFollowByPage" resultType="java.lang.Long">
        select b_user_id
        from relation
        where a_user_id = #{aUserId,jdbcType=INTEGER}
        limit #{l,jdbcType=INTEGER},#{r,jdbcType=INTEGER}
    </select>

    <select id="selectFollowCount" resultType="java.lang.Integer">
        select count(*)
        from relation
        where a_user_id = #{aUserId,jdbcType=INTEGER}
    </select>

    <select id="selectFansByPage" resultType="java.lang.Long">
        select a_user_id
        from relation
        where b_user_id = #{bUserId,jdbcType=INTEGER}
        limit #{l,jdbcType=INTEGER},#{r,jdbcType=INTEGER}
    </select>

    <select id="selectFansCount" resultType="java.lang.Integer">
        select count(*)
        from relation
        where b_user_id = #{bUserId,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from relation
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <delete id="cancelFollow" parameterType="java.lang.Long">
        delete
        from relation
        where a_user_id = #{aUserId,jdbcType=INTEGER}
          AND b_user_id = #{bUserId,jdbcType=INTEGER}
    </delete>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="top.ninng.qs.user.entity.Relation"
            useGeneratedKeys="true">
        insert into relation
            (id, a_user_id, b_user_id)
        values (#{id,jdbcType=INTEGER}, #{aUserId,jdbcType=INTEGER}, #{bUserId,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="top.ninng.qs.user.entity.Relation"
            useGeneratedKeys="true">
        insert into relation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="aUserId != null">a_user_id,</if>
            <if test="bUserId != null">b_user_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=INTEGER},</if>
            <if test="aUserId != null">#{aUserId,jdbcType=INTEGER},</if>
            <if test="bUserId != null">#{bUserId,jdbcType=INTEGER},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="top.ninng.qs.user.entity.Relation">
        update relation
        <set>
            <if test="aUserId != null">
                a_user_id = #{aUserId,jdbcType=INTEGER},
            </if>
            <if test="bUserId != null">
                b_user_id = #{bUserId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="top.ninng.qs.user.entity.Relation">
        update relation
        set a_user_id = #{aUserId,jdbcType=INTEGER},
            b_user_id = #{bUserId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>
